version: "3.5"
x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
      mode: non-blocking
      max-buffer-size: 4m
      loki-retries: "3"
services:
  temporal-history:
    <<: *logging
    container_name: temporal-history
#    depends_on:
#      - temporal-admin-tools
    environment:
      - DB=postgres12
      - DB_PORT=${POSTGRES_DEFAULT_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PWD}
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=history
      - USE_INTERNAL_FRONTEND=true
      - LOG_LEVEL=warn
#      - BIND_ON_IP=0.0.0.0
      - PROMETHEUS_ENDPOINT=0.0.0.0:8000
#      - TEMPORAL_BROADCAST_ADDRESS=temporal-history
      - NUM_HISTORY_SHARDS=2048
    image: temporalio/server:${TEMPORAL_SERVER_IMG}
    ports:
      - published: 7234
        target: 7234
      - published: 8000
        target: 8000
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./template/my_config_template.yaml:/etc/temporal/config/config_template.yaml
  temporal-history2:
    <<: *logging
    container_name: temporal-history2
#    depends_on:
#      - temporal-admin-tools
    environment:
      - DB=postgres12
      - DB_PORT=${POSTGRES_DEFAULT_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PWD}
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=history
      - NUM_HISTORY_SHARDS=2048
      - USE_INTERNAL_FRONTEND=true
      #      - BIND_ON_IP=0.0.0.0
      - PROMETHEUS_ENDPOINT=0.0.0.0:8005
      #      - TEMPORAL_BROADCAST_ADDRESS=temporal-history
      - HISTORY_MEMBERSHIP_PORT=6934
      - HISTORY_GRPC_PORT=7238
      - LOG_LEVEL=warn
    image: temporalio/server:${TEMPORAL_SERVER_IMG}
    ports:
      - published: 7238
        target: 7238
      - published: 8005
        target: 8005
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./template/my_config_template.yaml:/etc/temporal/config/config_template.yaml
  temporal-matching:
    <<: *logging
    container_name: temporal-matching
    depends_on:
      - temporal-history
    environment:
      - DB=postgres12
      - DB_PORT=${POSTGRES_DEFAULT_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PWD}
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=matching
      - PROMETHEUS_ENDPOINT=0.0.0.0:8001
      - NUM_HISTORY_SHARDS=2048
      - USE_INTERNAL_FRONTEND=true
      - LOG_LEVEL=warn
    image: temporalio/server:${TEMPORAL_SERVER_IMG}
    ports:
      - published: 7235
        target: 7235
      - published: 8001
        target: 8001
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./template/my_config_template.yaml:/etc/temporal/config/config_template.yaml
  temporal-matching2:
    <<: *logging
    container_name: temporal-matching2
    depends_on:
      - temporal-history
      - temporal-history2
    environment:
      - DB=postgres12
      - DB_PORT=${POSTGRES_DEFAULT_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PWD}
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=matching
      - PROMETHEUS_ENDPOINT=0.0.0.0:8006
      - MATCHING_GRPC_PORT=7239
      - MATCHING_MEMBERSHIP_PORT=6939
      - NUM_HISTORY_SHARDS=2048
      - USE_INTERNAL_FRONTEND=true
      - LOG_LEVEL=warn
    image: temporalio/server:${TEMPORAL_SERVER_IMG}
    ports:
      - published: 7239
        target: 7239
      - published: 8006
        target: 8006
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./template/my_config_template.yaml:/etc/temporal/config/config_template.yaml
  temporal-frontend:
    <<: *logging
    container_name: temporal-frontend
    depends_on:
      - temporal-matching
    environment:
      - DB=postgres12
      - DB_PORT=${POSTGRES_DEFAULT_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PWD}
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=frontend
      - FRONTEND_GRPC_PORT=7237
      - PROMETHEUS_ENDPOINT=0.0.0.0:8002
      - NUM_HISTORY_SHARDS=2048
      - USE_INTERNAL_FRONTEND=true
      - LOG_LEVEL=warn
      - FRONTEND_HTTP_PORT=7244
    image: temporalio/server:${TEMPORAL_SERVER_IMG}
    ports:
      - published: 7237
        target: 7237
      - published: 7244
        target: 7244
      - published: 8002
        target: 8002
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./template/my_config_template.yaml:/etc/temporal/config/config_template.yaml
  temporal-frontend2:
    <<: *logging
    container_name: temporal-frontend2
    depends_on:
      - temporal-matching
    environment:
      - DB=postgres12
      - DB_PORT=${POSTGRES_DEFAULT_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PWD}
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=frontend
      # set different frontend grpc port
      - FRONTEND_GRPC_PORT=7236
      # set different membership port than temporal-frontend
      - FRONTEND_MEMBERSHIP_PORT=6936
      - PROMETHEUS_ENDPOINT=0.0.0.0:8004
      - NUM_HISTORY_SHARDS=2048
      - USE_INTERNAL_FRONTEND=true
      - LOG_LEVEL=warn
      - FRONTEND_HTTP_PORT=7245
    image: temporalio/server:${TEMPORAL_SERVER_IMG}
    ports:
      - published: 7236
        target: 7236
      - published: 7245
        target: 7245
      - published: 8004
        target: 8004
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./template/my_config_template.yaml:/etc/temporal/config/config_template.yaml
  temporal-internal-frontend:
    <<: *logging
    container_name: temporal-internal-frontend
    depends_on:
      - temporal-matching
    environment:
      - DB=postgres12
      - DB_PORT=${POSTGRES_DEFAULT_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PWD}
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=internal-frontend
      - PROMETHEUS_ENDPOINT=0.0.0.0:8007
      - NUM_HISTORY_SHARDS=2048
      - USE_INTERNAL_FRONTEND=true
      - LOG_LEVEL=warn
    image: temporalio/server:${TEMPORAL_SERVER_IMG}
    ports:
      - published: 7231
        target: 7231
      - published: 8007
        target: 8007
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./template/my_config_template.yaml:/etc/temporal/config/config_template.yaml
  temporal-worker:
    <<: *logging
    container_name: temporal-worker
    depends_on:
      - temporal-frontend
      - temporal-frontend2
    environment:
      - DB=postgres12
      - DB_PORT=${POSTGRES_DEFAULT_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PWD}
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=worker
      - PROMETHEUS_ENDPOINT=0.0.0.0:8003
      # set to loadbalancing
      - USE_INTERNAL_FRONTEND=true
      - LOG_LEVEL=warn
    image: temporalio/server:${TEMPORAL_SERVER_IMG}
    ports:
      - published: 7232
        target: 7232
      - published: 8003
        target: 8003
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./template/my_config_template.yaml:/etc/temporal/config/config_template.yaml
  temporal-admin-tools:
    <<: *logging
    container_name: temporal-admin-tools
    depends_on:
      - temporal-frontend
      - temporal-frontend2
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal-loadbalancing:7233
      - TEMPORAL_ADDRESS=temporal-loadbalancing:7233
      - DB=postgres12
      - DB_PORT=${POSTGRES_DEFAULT_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PWD}
      - POSTGRES_SEEDS=postgresql
      - TEMPORAL_HOME=/etc/temporal
      # set to loadbalancing
      - PUBLIC_FRONTEND_ADDRESS=temporal-loadbalancing:7233
    image: temporalio/admin-tools:${TEMPORAL_SERVER_IMG}
    volumes:
      - "./script/setup.sh:/etc/temporal/setup.sh"
    entrypoint:
      - /etc/temporal/setup.sh
    restart: always
    stdin_open: true
    tty: true
  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal-admin-tools
    environment:
      - TEMPORAL_ADDRESS=temporal-loadbalancing:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
      - TEMPORAL_UI_PORT=8081
      - TEMPORAL_SHOW_TEMPORAL_SYSTEM_NAMESPACE=true
    image: temporalio/ui:${TEMPORAL_UI_IMG}
    ports:
      - published: 8081
        target: 8081
  #envoy
  temporal-loadbalancing:
    <<: *logging
    container_name: temporal-envoy
    image: envoyproxy/envoy:${ENVOY_IMG}
    ports:
      - published: 7233
        target: 7233
      - published: 7243
        target: 7243
      - published: 9901
        target: 9901
    volumes:
      - type: bind
        source: ./deployment/envoy/envoy.yaml
        target: /etc/envoy/envoy.yaml
    restart: on-failure
    depends_on:
      - temporal-admin-tools
      - temporal-frontend
      - temporal-frontend2
# nginx
#  temporal-loadbalancing:
#    <<: *logging
#    image: nginx:${NGINX_IMG}
#    container_name: temporal-nginx
#    restart: unless-stopped
#    depends_on:
#      - temporal-frontend
#      - temporal-frontend2
#    ports:
#      - 7233:7233
#    volumes:
#      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf

# haproxy
#  temporal-loadbalancing:
#    <<: *logging
#    image: haproxy:${HAPROXY_IMG}
#    container_name: temporal-haproxy
#    restart: unless-stopped
#    depends_on:
#      - temporal-admin-tools
#    ports:
#      - 7233:7233
#      - 8404:8404
#    volumes:
#      - ./deployment/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
networks:
  default:
    external: true
    name: temporal-network
